'''
20185224김재용
'''

#Index

li = [11,12,13,'14',[15,16]] #[]으로 선언한다.

print(li[0])        #[0] 첫 번째 요소를 뜻한다.
print(li[3])        #자료형이 달라도 삽입할 수 있다.
print(li[4])        #리스트도 요소로 삽입이 가능하다. 이 경우 다차원 구조라고도 불린다.

print(li[0:5])      #슬라이싱이라는 문법을 지원한다. a:b를 통해 범위를 지정할 수 있다.

print(li*2)         #리스트는 문자열의 연산과 비슷하게 사용할 수 있다.


li.append(17)       #append를 통해 원소를 추가할 수 있다. 많은 함수들이 제공된다.
print(li)

li[0]=10            #원소의 값을 바꿀 수 있다. mutable하다고 표현한다.
print(li)





#Tuple

tu = (1,2,3,4,5) #()으로 선언한다.

print(tu[0])        #리스트와 유사하게 인덱싱, 슬라이싱을 사용할 수 있다.
print(tu[0:3]) 

#하지만 Tuple은 그 요소값을 수정하거나 삭제할 수 없다.
#리스트와는 대조되는 속성으로, immutable하다고 표현한다.





#Dictionary

dic = {0:0, 1:1, 2:2, 3:3, 5:4, 4:5, '5':6, '5':7} #{key:value,-}로 표현한다.

print(dic)
print(dic[0])       #index 괄호에 key를 넣음으로 그 value를 불러올 수 있다.
print(dic[5])       #원소들이 배치된 순서와는 관계없다.
print(dic['5'])     #하나의 key에 여러 value가 있으면 맨 뒤의 값이 나오는 듯 하다.

#key에 리스트를 사용해서는 안 된다. mutable한 값은 key로 사용할 수 없는 모양.
#key가 함수의 정의역 같은 느낌이지만 key 하나에 value 여러개를 넣어도 딱히 문제가 생기지는 않는다.
