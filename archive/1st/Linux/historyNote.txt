passwd

date

hostname

dir == ls

uname -a

whoami

who am i

who

ls
ls > ls.txt	//ls의 결과를 ls.txt에 보내 저장함

"""
(command) > a.txt		//명령어의 결과를 >를 통해 파일에 저장하거나 할 수 있다
"""

talk (대상)

clear

pwd

which 		// locate a command

mkdir (디렉토리 이름)

rmdir (대상)



cat		// concatenate files and print on the standard output

	cat > list.data		//list.data 생성
	...			//...를 list.data에 저장한다.

	cat v1 v2		//v1과 v2를 출력

	cat (대상) | more		//페이지 단위로 출력. (길때만)
	cat (대상) | less		//새 창을 열어서 출력해줌. 내용이 많을 때 사용. 깔끔하다

	cat (대상) -n		//Line number를 표시해준다

	cat (대상) -e		//줄의 맨 끝에 $를 붙인다. 공백이 있는지 확인하고
				//여러 줄을 한 줄로 만들 수 있다. (?)

	cat (대상1) > (대상2)	//대상2에 대상1의 내용을 덮어쓰기한다.
	cat (대상1) >> (대상2)	//대상2의 제일 아래에 대상1의 내용을 붙여넣는다.
	
	cat < (대상)		//대상의 이름을 cat의 인풋으로 사용한다??????????????



more 			//페이지 단위로 출력한다

head -(int) (대상)	//파일의 앞부분을 화면에 출력한다.
tail -(int) (대상)	//뒷부분

wc [-lwc] (대상)		//Line, Words, Count로 각각 줄, 단어, 문자이다.

man

edit

javac

rm
	rm -r : 하위 파일도 모두 삭제

gcc				//compile with c
	gcc (대상.c) -o (대상2) 	//대상 C파일을 컴파일해 (-o 뒤의 대상)이라고 저장한다. Hello.out 처럼.




cp (대상1) (대상2)			//대상1(파일)의 내용을 대상2(파일)에 복사한다. -i : interactive. Y/N을 표시해줌.
				//대상으로 디렉토리를 입력하면 그 디렉토리로 파일들을 복사한다.

mv	이동일 뿐이지 cp와 같다

rm (대상)				//대상을 삭제한다. -i는 대화형 옵션이고 -r은 하위 파일도 삭제한다. (리커전 옵션)



ln (대상1) (대상2)			//대상1에 대한 링크로 파일2를 만들어낸다. -s는 심볼릭 링크 (소프트링크)
				//대상2가 디렉토리: 파일1에 대한 링크를 디렉토리에 같은 이름으로 생성한다.

				//하드 링크: 기존 파일에 대한 새로운 이름.
				//심볼릭 링크: 다른 파일을 가리키고 있는 별도의 파일. 바로가기 같은 건가 봄.





